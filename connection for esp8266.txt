Connect the SIM800i module to the ESP8266 board according to the manufacturer's instructions.

Connect the button to the ESP8266 board. You can use a digital input pin on the ESP8266 to detect button presses and trigger an event.

Write code to detect button presses using the digitalRead() function in the Arduino IDE.

When the button is pressed, send a message to the SIM800i module to send an SMS to a designated phone number. You can use the AT commands provided by the SIM800i module to send an SMS.

In addition to sending an SMS, you can also trigger a buzzer to sound. You can connect a buzzer to one of the digital output pins on the ESP8266 and write code to turn it on and off when the button is pressed.

Upload the code to the ESP8266 board and test the project.

Note: You'll need to replace the phone number +1234567890 with the phone number you want to send the SMS to.

In this example, the button is connected to digital pin 4 and the buzzer is connected to digital pin 5. The SIM800i module is connected to the ESP8266 board using SoftwareSerial on digital pins 2 and 3. The program sets the SIM800i module to text mode and waits for 3 seconds before sending the SMS. When the button is pressed, the buzzer sounds for 1 second and an SMS is sent with the message "Button pressed!".



      +-----+
      | ESP |
      | 8266|
      +-----+
         |
      +-----+
      | SIM |
      | 800i|
      +-----+
         |
+-----+     +-----+
| Buzzer  -- | Pin |
+-----+     +-----+
         |
+-----+     +-----+
| Button -- | Pin |
+-----+     +-----+


ESP8266: This is the main microcontroller that will run the program.

SIM800i: This is the GSM module that will be used to send the SMS message. Connect the RX pin of the SIM800i to the TX pin (digital pin 3) of the ESP8266 and the TX pin of the SIM800i to the RX pin (digital pin 2) of the ESP8266.

Button: This is the input device that will trigger the SMS message to be sent. Connect one side of the button to digital pin 4 of the ESP8266 and the other side of the button to GND.

Buzzer: This is the output device that will provide a visual indication that the button has been pressed. Connect one side of the buzzer to digital pin 5 of the ESP8266 and the other side of the buzzer to GND.